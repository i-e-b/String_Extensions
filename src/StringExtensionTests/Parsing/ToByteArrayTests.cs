namespace StringClusterScanTests.Parsing
{
    using System;
    using System.Linq;
    using NUnit.Framework;
    using String_Extensions;

    [TestFixture]
    public class ToByteArrayTests
    {
        [Test]
        public void parsing_valid_byte_arrays()
        {
            const string input =
                "53 74 72 69 6E 67 5F 45 78 74 65 6E 73 69 6F 6E 73 0D 0A 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D 3D"
                + "3D 3D 0D 0A 0D 0A 41 20 62 69 67 20 70 69 6C 65 20 6F 66 20 73 74 72 69 6E 67 20 6D 61 6E 69 70 75"
                + "6C 61 74 69 6F 6E 20 6D 65 74 68 6F 64 73 20 66 6F 72 20 43 23 0D 0A 0D 0A 54 6F 64 6F 0D 0A 2D 2D";
            
            var expected = new byte[] {
                0x53,0x74,0x72,0x69,0x6E,0x67,0x5F,0x45,0x78,0x74,0x65,0x6E,0x73,0x69,0x6F,0x6E,0x73,0x0D,0x0A,0x3D,
                0x3D,0x3D,0x3D,0x3D,0x3D,0x3D,0x3D,0x3D,0x3D,0x3D,0x3D,0x3D,0x3D,0x3D,0x3D,0x3D,0x0D,0x0A,0x0D,0x0A,
                0x41,0x20,0x62,0x69,0x67,0x20,0x70,0x69,0x6C,0x65,0x20,0x6F,0x66,0x20,0x73,0x74,0x72,0x69,0x6E,0x67,
                0x20,0x6D,0x61,0x6E,0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F,0x6E,0x20,0x6D,0x65,0x74,0x68,0x6F,0x64,
                0x73,0x20,0x66,0x6F,0x72,0x20,0x43,0x23,0x0D,0x0A,0x0D,0x0A,0x54,0x6F,0x64,0x6F,0x0D,0x0A,0x2D,0x2D };

            Assert.That(input.ToByteArray().SequenceEqual(expected));
            Assert.That(input.ToLower().ToByteArray().SequenceEqual(expected));
            Assert.That(input.Replace(" ","").ToLower().ToByteArray().SequenceEqual(expected));
        }


        [Test]
        public void empty_input()
        {
            Assert.That("".ToByteArray(), Is.Empty);
        }

        [Test]
        public void invalid_input()
        {
            Assert.Throws<FormatException>(() => "not a hex string".ToByteArray());
        }

         
    }
}